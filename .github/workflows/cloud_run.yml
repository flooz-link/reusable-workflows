name: Cloud Run Deployment Workflow

on:
  workflow_call:
    inputs:
      PROJECT_ID:
        required: true
        type: string
      SERVICE:
        required: true
        type: string
      REGION:
        required: false
        type: string
        default: us-central1
      ENV:
        required: true
        type: string
      WORK_DIR:
        required: true
        type: string
      CONCURRENCY:
        required: false
        type: number
        default: 30
      CPU:
        required: false
        type: number
        default: 2
      MEM:
        required: false
        type: string
        default: 1Gi
      INGRESS_RULE:
        required: false
        type: string
        default: ""
      CUSTOM_FLAGS:
        required: false
        type: string
        default: ""
      MAX_INSTANCES:
        required: false
        type: number
        default: 200
      MIN_INSTANCES:
        required: false
        type: number
        default: 0

    # outputs:
    #   url: 
    #     description: The URL of this specific Cloud Run revision
    #     value: ${{ steps.deploy.outputs.url }}

jobs:
  deploy-cloud-run-service:
    name: Deploying ${{inputs.SERVICE}}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SA_GITHUB_ACTIONS }}'
          create_credentials_file: true
          export_environment_variables: true
      
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Fix env vars
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Build Container
        run: |-
          docker build -t gcr.io/${{ secrets.PROJECT_ID }}/${{ inputs.SERVICE }}:${{ github.sha }} -f Dockerfile ../ --build-arg ENV=${{ inputs.ENV }} --build-arg GIT_VERSION=${SHORT_SHA}
          docker push gcr.io/${{ secrets.PROJECT_ID }}/${{ inputs.SERVICE }}:${{ github.sha }}
        working-directory: ${{inputs.WORK_DIR}}

      - name: Create Flag Str
        id: flags
        run: |-
          echo ${#${{ inputs.INGRESS_RULE }}}
          ingresLength=$(echo ${#${{ inputs.INGRESS_RULE }}})

          customFlagLength=$(echo ${#${{ inputs.CUSTOM_FLAGS }}})
          
          defaultFlags=$(echo "--cpu=${{ inputs.CPU }} --memory=${{ inputs.MEM }} --execution-environment gen2  --concurrency=${{ inputs.CONCURRENCY }} --max-instances=${{ inputs.MAX_INSTANCES }} --min-instances=${{ inputs.MIN_INSTANCES}}")
         
          if [ $ingresLength -ne 0 ]; then  
            defaultFlags=$($defaultFlags ${{ inputs.INGRESS_RULE }}); 
          fi

          if [ $customFlagLength -ne 0 ]; then  
            defaultFlags=$($defaultFlags ${{ inputs.CUSTOM_FLAGS }}); 
          fi

          echo ::set-output flags=echo $defaultFlags 

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ inputs.SERVICE }}
          image: gcr.io/${{ secrets.PROJECT_ID }}/${{ inputs.SERVICE }}:${{ github.sha }}
          region: ${{ inputs.REGION }}
          gcloud_component: 'beta'
          flags: '${{steps.flags.outputs.flags}}'
          env_vars: |
            SERVICE = ${{ inputs.SERVICE }}
            PROJECT_ID = ${{ secrets.PROJECT_ID }}
            GIT_VERSION = ${{ github.sha }}

      - name: Show Output
        run: |-
          echo ${{ steps.deploy.outputs.url }}
          echo "::set-output url=${{ steps.deploy.outputs.url }}"